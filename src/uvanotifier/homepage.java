package uvanotifier;

import java.awt.Desktop;
import java.awt.Dimension;
import java.net.InetAddress;
import java.net.URL;
import java.net.URLConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;
import org.apache.derby.drda.NetworkServerControl;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Zeron
 */
public class homepage extends javax.swing.JFrame {
    public static int selectedRow;
    public static DefaultListModel dm = new DefaultListModel();

    public homepage() {

        initComponents();
        Dimension windowSize = getContentPane().getSize();
        setContentPane(new JLabel(new ImageIcon("E:\\Academic\\2-1\\Software Development Project II\\uvanotifier\\background.gif")));
        initComponents();

        try {
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
        }
                
        Connection con = null;
        
        try {
            DriverManager.registerDriver(new org.apache.derby.jdbc.EmbeddedDriver());
        } catch (SQLException ex) {
            Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/friendlist", "Zeron", "123456");
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        try {
            PreparedStatement st = con.prepareStatement("SELECT * FROM ZERON.FRIENDLIST");
            ResultSet rs = st.executeQuery();
            friendlist_table.setModel(DbUtils.resultSetToTableModel(rs));
            con.close();
        } catch (Exception ex) {
            System.out.println("test\n");

            JOptionPane.showMessageDialog(null, "Couldn't fetch database!\n");
        }

        ColorRenderer colorRenderer = new ColorRenderer();
        friendlist_table.setDefaultRenderer(Object.class, colorRenderer);
        
        setSize(windowSize);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonuser = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        userfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        submitbutton = new javax.swing.JButton();
        radio_name = new javax.swing.JRadioButton();
        radio_id = new javax.swing.JRadioButton();
        add_button = new javax.swing.JButton();
        up_button = new javax.swing.JButton();
        del_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        friendlist_table = new javax.swing.JTable();
        viewbut = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1300, 1000));

        jLabel1.setIcon(new javax.swing.ImageIcon("F:\\Academic\\2-1\\Software Development Project II\\enter_id.png")); // NOI18N

        userfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userfieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Who you are following:");

        submitbutton.setText("Submit");
        submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbuttonActionPerformed(evt);
            }
        });

        radio_name.setBackground(new java.awt.Color(255, 249, 249));
        buttonuser.add(radio_name);
        radio_name.setText("Username");
        radio_name.setOpaque(false);
        radio_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_nameActionPerformed(evt);
            }
        });

        buttonuser.add(radio_id);
        radio_id.setText("User ID");
        radio_id.setOpaque(false);
        radio_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_idActionPerformed(evt);
            }
        });

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        up_button.setText("Edit");
        up_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                up_buttonActionPerformed(evt);
            }
        });

        del_button.setText("Delete");
        del_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_buttonActionPerformed(evt);
            }
        });

        clear_button.setText("Clear");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        friendlist_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(friendlist_table);

        viewbut.setText("View uHunt");
        viewbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbutActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Quit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Settings");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(radio_name)
                        .addGap(47, 47, 47)
                        .addComponent(radio_id, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(submitbutton))
                    .addComponent(userfield, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(del_button, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(up_button, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clear_button, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewbut))
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radio_id)
                            .addComponent(radio_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitbutton))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_button)
                    .addComponent(del_button)
                    .addComponent(up_button))
                .addGap(8, 8, 8)
                .addComponent(viewbut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clear_button)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        Uvanotifier.addwin.setVisible(true);
    }//GEN-LAST:event_add_buttonActionPerformed

    private void submitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbuttonActionPerformed
        String inp = userfield.getText();

        String link = "http://uhunt.felix-halim.net/";

        URL uobj;
        URLConnection con;

        if (radio_name.isSelected()) {
            link = link + "u/" + inp;
        } else {
            link = link + "id/" + inp;
        }

        try {
            Desktop.getDesktop().browse(new URL(link).toURI());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_submitbuttonActionPerformed

    private void radio_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_nameActionPerformed

    private void userfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userfieldActionPerformed

    private void radio_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_idActionPerformed

    private void del_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_buttonActionPerformed

        int selectedRow = friendlist_table.getSelectedRow();

        if (selectedRow >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the contact " + friendlist_table.getModel().getValueAt(selectedRow, 0) + "?", "Confirm Deletion", JOptionPane.WARNING_MESSAGE) == 0) {
                Connection con = null;

                JOptionPane.showMessageDialog(null, friendlist_table.getModel().getValueAt(selectedRow, 0) + " was deleted!");

                try {
                    con = DriverManager.getConnection("jdbc:derby://localhost:1527/friendlist", "Zeron", "123456");
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }

                Statement statement = null;
                try {
                    statement = con.createStatement();
                } catch (SQLException ex) {
                    Logger.getLogger(add_friend.class.getName()).log(Level.SEVERE, null, ex);
                }

                try {
                    statement.executeUpdate("DELETE FROM FRIENDLIST WHERE NAME = '" + friendlist_table.getModel().getValueAt(selectedRow, 0) + "'");
                } catch (SQLException ex) {
                    Logger.getLogger(add_friend.class.getName()).log(Level.SEVERE, null, ex);
                }
                //      Uvanotifier.rname[Uvanotifier.friend_no] = friend_name.getText();
                //    Uvanotifier.uid[Uvanotifier.friend_no] = uva_id.getText();
                //  Uvanotifier.uname[Uvanotifier.friend_no++] = uva_name.getText();

                try {
                    PreparedStatement st = con.prepareStatement("SELECT * FROM ZERON.FRIENDLIST");
                    ResultSet rs = st.executeQuery();
                    Uvanotifier.start.friendlist_table.setModel(DbUtils.resultSetToTableModel(rs));
                    con.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Couldn't fetch database!\n");
                }

                //    Uvanotifier.start.pack();
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(add_friend.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a row to delete it", "No Selection", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_del_buttonActionPerformed

    private void up_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_up_buttonActionPerformed
        selectedRow = friendlist_table.getSelectedRow();

        if (selectedRow >= 0) {
            Uvanotifier.upwin.friend_name.setText(friendlist_table.getModel().getValueAt(selectedRow, 0).toString());
            Uvanotifier.upwin.uva_id.setText(friendlist_table.getModel().getValueAt(selectedRow, 1).toString());
            Uvanotifier.upwin.uva_name.setText(friendlist_table.getModel().getValueAt(selectedRow, 2).toString());
            
            Uvanotifier.upwin.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Select a row to edit it", "No Selection", JOptionPane.ERROR_MESSAGE);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_up_buttonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete all the contacts?", "Confirm Clearing", JOptionPane.WARNING_MESSAGE) == 0) {
            Connection con = null;

            try {
                con = DriverManager.getConnection("jdbc:derby://localhost:1527/friendlist", "Zeron", "123456");
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

            Statement statement = null;
            try {
                statement = con.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(add_friend.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                statement.executeUpdate("DELETE FROM FRIENDLIST");
            } catch (SQLException ex) {
                Logger.getLogger(add_friend.class.getName()).log(Level.SEVERE, null, ex);
            }
            //      Uvanotifier.rname[Uvanotifier.friend_no] = friend_name.getText();
            //    Uvanotifier.uid[Uvanotifier.friend_no] = uva_id.getText();
            //  Uvanotifier.uname[Uvanotifier.friend_no++] = uva_name.getText();

            try {
                PreparedStatement st = con.prepareStatement("SELECT * FROM ZERON.FRIENDLIST");
                ResultSet rs = st.executeQuery();
                Uvanotifier.start.friendlist_table.setModel(DbUtils.resultSetToTableModel(rs));
                con.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Couldn't fetch database!\n");
            }

            //    Uvanotifier.start.pack();
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(add_friend.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void viewbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbutActionPerformed
        selectedRow = friendlist_table.getSelectedRow();

        if (selectedRow >= 0)
        {String inu = friendlist_table.getModel().getValueAt(selectedRow, 2).toString();
        String ini = friendlist_table.getModel().getValueAt(selectedRow, 1).toString();

        String link = "http://uhunt.felix-halim.net/";

        URL uobj;
        URLConnection con;
        
        if (inu.isEmpty() == false) {
            link = link + "u/" + inu;
        } else if (ini.isEmpty() == false) 
            {
            link = link + "id/" + ini;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "This entry has neither UVa ID nor username!", "No Data", JOptionPane.ERROR_MESSAGE);            
        }

        try {
            Desktop.getDesktop().browse(new URL(link).toURI());
        } catch (Exception e) {
            e.printStackTrace();
        }}
        else 
            JOptionPane.showMessageDialog(null, "Select a row to view uHunt profile", "No Selection", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_viewbutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.ButtonGroup buttonuser;
    private javax.swing.JButton clear_button;
    private javax.swing.JButton del_button;
    public static javax.swing.JTable friendlist_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton radio_id;
    private javax.swing.JRadioButton radio_name;
    private javax.swing.JButton submitbutton;
    private javax.swing.JButton up_button;
    private javax.swing.JTextField userfield;
    private javax.swing.JButton viewbut;
    // End of variables declaration//GEN-END:variables
}
